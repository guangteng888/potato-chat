name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        npm run install:all
        
    - name: Run linting
      run: npm run lint
      
    - name: Run tests
      run: npm run test
      
    - name: Check TypeScript
      run: |
        cd PotatoChatDesktop/potato-chat-desktop-frontend && npx tsc --noEmit
        cd ../../potato-chat-web && npx tsc --noEmit
        cd ../PotatoChatAdmin/frontend && npx tsc --noEmit

  build-desktop:
    runs-on: ${{ matrix.os }}
    needs: lint-and-test
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm run install:desktop
      
    - name: Build desktop app
      run: |
        cd PotatoChatDesktop
        npm run build:${{ matrix.os == 'ubuntu-latest' && 'linux' || matrix.os == 'windows-latest' && 'win' || 'mac' }}
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: desktop-${{ matrix.os }}
        path: PotatoChatDesktop/dist/

  build-web:
    runs-on: ubuntu-latest
    needs: lint-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm run install:web
      
    - name: Build web app
      run: npm run build:web
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: web-build
        path: potato-chat-web/dist/

  build-android:
    runs-on: ubuntu-latest
    needs: lint-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm run install:mobile
      
    - name: Build Android APK
      run: |
        cd PotatoChatMobile/android
        ./gradlew assembleRelease
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: PotatoChatMobile/android/app/build/outputs/apk/release/

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run security audit
      run: |
        npm audit --audit-level moderate
        
    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: javascript
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

